Problem ::::1

#include<bits/stdc++.h>

using namespace std;

main()
{
    int total_BW = 33*1000000;
    int controll_BW = 1*1000000;
    int f_per_channel = 25*1000*2;

    int total_channel = (total_BW / f_per_channel);
    int total_controll = (controll_BW / f_per_channel);
    int total_voice = (total_channel-total_controll);


    /// For 4 cell reuse..............
    int voice_per_cell = total_voice / 4;
    int controll_per_cell = total_controll / 4;

    cout<<"For four cell reuse : "<<endl;
    cout<<"Voice channel per cell is : "<<voice_per_cell<<endl;
    cout<<"control channel per cell is : "<<controll_per_cell<<endl;

}




Prolem ::::2

#include<bits/stdc++.h>

using namespace std;

void cluster_size(double n, double SNRgiven, double N)
{
    double I = 6;

    double Q = sqrt(3*N);
    double SNRdb = 10*log10((pow(Q,n))/I);
    cout<<"For n = "<<n<<endl;
    if(SNRgiven <= SNRdb)
    {
        cout<<"N = "<<N<<" can be used. "<<endl;
        cout<<"Output SNRdb for N = "<<N<<" is : "<<SNRdb<<endl;
    }
    else{
        cout<<"N = "<<N<<" can not be used. "<<endl;
    }
    cout<<endl;
}

main()
{
    cluster_size(4, 15, 7);
    cluster_size(3, 15, 7);
    cluster_size(3, 15, 12);
}



Problem ::::3

#include<bits/stdc++.h>

using namespace std;

double A(int tc)
{
    if(tc==1)
    {
        return .005;
    }
    else if(tc==5)
    {
        return 1.13;
    }
    else if(tc==10)
    {
        return 3.96;
    }
    else if (tc==20)
    {
        return 11.1;
    }
    else if(tc==100)
    {
        return 80.9;
    }
}

main()
{
    double Au = 0.1;
    double GOS = (.5/100);

    double C[]={1, 5, 10, 20, 100};

    for(auto it: C)
    {
        cout<<"Total supported users for C = "<<it<<" is : ";
        double U = A(it)/Au;
        cout<<U<<" \nby taking ceiling value : "<<ceil(U)<<endl;
    }

}


Problem :::: 4


#include<bits/stdc++.h>

using namespace std;

double A(int tc)
{
    if(tc==19)
    {
        return 12.0;
    }
    else if(tc==57)
    {
        return 45.0;
    }
    else if(tc==100)
    {
        return 88.0;
    }
}

main()
{
    double Au = (2.0*3.0)/60.0;
    double GOS = (2/100);

    double C[]={19, 57, 100};
    double cells[]={394, 98, 49};


    cout<<"Total supported users for system A per cell is : ";
    double U = A(C[0])/Au;
    cout<<U<<" \nby taking ceiling value : "<<ceil(U)<<endl;
    cout<<"It can support total "<<U*cells[0]<<" users"<<endl;
    cout<<"Which is "<<(U*cells[0]/2e6)*100<<"% of the total population."<<endl;
    cout<<endl;

    cout<<"Total supported users for system B per cell is : ";
    U = A(C[1])/Au;
    cout<<U<<" \nby taking ceiling value : "<<ceil(U)<<endl;
    cout<<"It can support total "<<U*cells[1]<<" users"<<endl;
    cout<<"Which is "<<(U*cells[1]/2e6)*100<<"% of the total population."<<endl;
    cout<<endl;

    cout<<"Total supported users for system C per cell is : ";
    U = A(C[2])/Au;
    cout<<U<<" \nby taking ceiling value : "<<ceil(U)<<endl;
    cout<<"It can support total "<<U*cells[2]<<" users"<<endl;
    cout<<"Which is "<<(U*cells[2]/2e6)*100<<"% of the total population."<<endl;


}



Problem :::: 5

#include<bits/stdc++.h>

#define pi 3.1416
using namespace std;

main()
{
    double Pt = 50;
    double Pt_dBm = 10*log10(Pt/.001);
    double Pt_dBw = 10*log10(Pt/1);

    cout<<"Transmitted power in dBm = "<<Pt_dBm<<endl;
    cout<<"Transmitted power in dBw = "<<Pt_dBw<<endl;

    double gain1=1, gain2 = 1, L = 1/3, l = (3e8/ 900e6), d=100;

    double Pr = (Pt * gain1 * gain2 * pow(1.0/3.0, 2))/(pow(4*pi, 2) * pow(d,2));
    cout<<"Received power Pr = "<<Pr<<endl;
    cout<<"Received power in dB PrdBm = "<<10*log10(Pr/.001)<<endl;
    cout<<"If the receiver is 10 Km away from the transmitter, d = 10000"<<endl;
    d=10000;
    Pr = (Pt * gain1 * gain2 * 1/9)/(pow(4*pi, 2) * pow(d,2));
    cout<<"Received power Pr = "<<Pr<<endl;
    cout<<"Received power in dB PrdBm = "<<10*log10(Pr/.001)<<endl;


}



Problem :::: 6

#include<bits/stdc++.h>
#define pi  3.1416
using namespace std;


main()
{
    double d = 5e3;
    double Eo = 1e-3;
    double d0 = 1000;

    double f = 900e6;

    double L = ((double)3e8 / f)/4.0;
    cout<<"Length of the receiving antenna L = "<<L<<endl;
    L*=4;
    double GdB = 2.55;
    double Gain = pow(10, GdB/10.0);

    cout<<"Gain is : "<<Gain<<endl;
    double ht = 50, hr = 1.5;
    double Er = (2*Eo*d0*2*pi*ht*hr)/(L*d*d);

    double Ae = (Gain*L*L)/(4*pi);

    double Pr=(Er*Er/(120*pi))*Ae;

    cout<<"The received power Pr = "<<Pr<<endl;
    cout<<"The received power in dBm is PrdBm = "<<10*log10(Pr/.001)<<endl;
}


Problem :::: 7

#include<bits/stdc++.h>

using namespace std;

main()
{
    double hm=2;
    double fc=900;
    double hb=100;
    double d=4;
    double a_hm=(3.2*pow((log10(11.75*hm)),2)) - 4.97;

    double Lp=69.55+26.16*log10(fc)-13.82*log10(hb)-a_hm+(44.9-6.55*log10(hb))*log10(d);
    cout<<"Loss path: "<<Lp<<endl;

}


Problem :::: 8

#include<bits/stdc++.h>

using namespace std;

main()
{
    double fc=1.8;
    double hb=20;
    double d=pow((pow(20,2)+pow(30,2)),0.5)/1000;

    double Path_Loss=135.41+(12.49*log10(fc))-(4.99*log10(hb))+((46.84-2.34*log10(hb))*log10(d));
    cout<<Path_Loss<<endl;

}



